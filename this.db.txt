Dexie {
  _dbSchema:
   { logs:
      TableSchema {
        name: 'logs',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     startables:
      TableSchema {
        name: 'startables',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     todo:
      TableSchema {
        name: 'todo',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     watching:
      TableSchema {
        name: 'watching',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     settings:
      TableSchema {
        name: 'settings',
        primKey: [IndexSpec],
        indexes: [],
        instanceTemplate: {},
        mappedClass: null,
        idxByName: {} },
     favourites:
      TableSchema {
        name: 'favourites',
        primKey: [IndexSpec],
        indexes: [],
        instanceTemplate: {},
        mappedClass: null,
        idxByName: {} },
     auth:
      TableSchema {
        name: 'auth',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] } },
  version: [Function],
  _allTables:
   { logs:
      Table {
        name: 'logs',
        schema: [TableSchema],
        _tx: undefined,
        hook: [Function] },
     startables:
      Table {
        name: 'startables',
        schema: [TableSchema],
        _tx: undefined,
        hook: [Function] },
     todo:
      Table {
        name: 'todo',
        schema: [TableSchema],
        _tx: undefined,
        hook: [Function] },
     watching:
      Table {
        name: 'watching',
        schema: [TableSchema],
        _tx: undefined,
        hook: [Function] },
     settings:
      Table {
        name: 'settings',
        schema: [TableSchema],
        _tx: undefined,
        hook: [Function] },
     favourites:
      Table {
        name: 'favourites',
        schema: [TableSchema],
        _tx: undefined,
        hook: [Function] },
     auth:
      Table {
        name: 'auth',
        schema: [TableSchema],
        _tx: undefined,
        hook: [Function] } },
  _createTransaction: [Function],
  _whenReady: [Function],
  verno: 1,
  open: [Function],
  close: [Function],
  delete: [Function],
  backendDB: [Function],
  isOpen: [Function],
  hasBeenClosed: [Function],
  hasFailed: [Function],
  dynamicallyOpened: [Function],
  name: 'TymlyDatabase',
  on:
   { [Function: rv]
     addEventType: [Function: add],
     populate:
      { subscribers: [],
        fire: [Function: nop],
        subscribe: [Function: subscribe],
        unsubscribe: [Function: unsubscribe] },
     blocked:
      { subscribers: [Array],
        fire: [Function],
        subscribe: [Function: subscribe],
        unsubscribe: [Function: unsubscribe] },
     versionchange:
      { subscribers: [Array],
        fire: [Function],
        subscribe: [Function: subscribe],
        unsubscribe: [Function: unsubscribe] },
     ready:
      { subscribers: [],
        fire: [Function: nop],
        subscribe: [Function],
        unsubscribe: [Function: unsubscribe] } },
  transaction: [Function],
  _transaction: [Function],
  table: [Function],
  Collection: [Function: Collection],
  Table: [Function: Table],
  Transaction: [Function: Transaction],
  Version: [Function: Version],
  WhereClause: [Function: WhereClause],
  logs:
   Table {
     name: 'logs',
     schema:
      TableSchema {
        name: 'logs',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     _tx: undefined,
     hook:
      { [Function: rv]
        addEventType: [Function: add],
        creating: [Object],
        reading: [Object],
        updating: [Object],
        deleting: [Object] } },
  startables:
   Table {
     name: 'startables',
     schema:
      TableSchema {
        name: 'startables',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     _tx: undefined,
     hook:
      { [Function: rv]
        addEventType: [Function: add],
        creating: [Object],
        reading: [Object],
        updating: [Object],
        deleting: [Object] } },
  todo:
   Table {
     name: 'todo',
     schema:
      TableSchema {
        name: 'todo',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     _tx: undefined,
     hook:
      { [Function: rv]
        addEventType: [Function: add],
        creating: [Object],
        reading: [Object],
        updating: [Object],
        deleting: [Object] } },
  watching:
   Table {
     name: 'watching',
     schema:
      TableSchema {
        name: 'watching',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     _tx: undefined,
     hook:
      { [Function: rv]
        addEventType: [Function: add],
        creating: [Object],
        reading: [Object],
        updating: [Object],
        deleting: [Object] } },
  settings:
   Table {
     name: 'settings',
     schema:
      TableSchema {
        name: 'settings',
        primKey: [IndexSpec],
        indexes: [],
        instanceTemplate: {},
        mappedClass: null,
        idxByName: {} },
     _tx: undefined,
     hook:
      { [Function: rv]
        addEventType: [Function: add],
        creating: [Object],
        reading: [Object],
        updating: [Object],
        deleting: [Object] } },
  favourites:
   Table {
     name: 'favourites',
     schema:
      TableSchema {
        name: 'favourites',
        primKey: [IndexSpec],
        indexes: [],
        instanceTemplate: {},
        mappedClass: null,
        idxByName: {} },
     _tx: undefined,
     hook:
      { [Function: rv]
        addEventType: [Function: add],
        creating: [Object],
        reading: [Object],
        updating: [Object],
        deleting: [Object] } },
  auth:
   Table {
     name: 'auth',
     schema:
      TableSchema {
        name: 'auth',
        primKey: [IndexSpec],
        indexes: [Array],
        instanceTemplate: [Object],
        mappedClass: null,
        idxByName: [Object] },
     _tx: undefined,
     hook:
      { [Function: rv]
        addEventType: [Function: add],
        creating: [Object],
        reading: [Object],
        updating: [Object],
        deleting: [Object] } } }
